https://habr.com/ru/post/331348/ ( Включить в firefox Browsec)
sudo systemctl status ssh

-i путь к private key.
-p порт к которому подключаемся на удаленной машине(p в ниженем регистре!)
ssh  -p 25449 -i ~/.ssh/konst/id_rsa kb@104.248.192.230 'cd releases; ls -al'

-L локальный_порт:удаленный_адрес:удаленный_порт
ssh -X sergey@192.168.0.136 -p 66 -L 7777:127.0.0.1:8888 -L 8889:127.0.0.1:8889

-f  Requests ssh to go to background just before command execution.  
 This is useful if ssh is going to ask for passwords or
 passphrases, but the user wants it in the background.  This implies -n.
   The recommended way to start X11 programs at a
remote site is with something like ssh -f host xterm.
-N  Do not execute a remote command.  This is useful for just forwarding ports.
-t(-tt)
Переназначение псевдо-терминала. Это может быть использовано для произвольного выполнения программ 
базирующихся на выводе изображения на удаленной машине, что может быть очень полезно, например, при 
реализации возможностей меню. Несколько параметров -t заданных подряд переназначат терминал, 
даже если ssh не имеет локального терминала.

-A  пробрасывает авторизацию на удалённый сервер.
ssh -A sergey@193.138.146.89 -p 5544 ssh -tt cib@80.240.130.161 "ssh ansible@85.132.48.138"
pass: AsdQwe123!@#

Enables forwarding of connections from an authentication agent such as ssh-agent(1).
This can also be specified on a per-host basis in a configuration file.

Agent forwarding should be enabled with caution.  Users with the ability to bypass file permissions on the 
remote host (for the agent's UNIX-domain socket) can access the local agent
through the forwarded connection.  An attacker cannot obtain key material from the agent, however they can 
perform operations on the keys that enable them to authenticate using the
identities loaded into the agent.  A safer alternative may be to use a jump host (see -J).

-J destination
Connect to the target host by first making a ssh connection to the jump host described by destination and 
then establishing a TCP forwarding to the ultimate destination from there.
Multiple jump hops may be specified separated by comma characters.  This is a shortcut to specify a 
ProxyJump configuration directive.  Note that configuration directives supplied on
the command-line generally apply to the destination host and not any specified jump hosts.  
Use ~/.ssh/config to specify configuration for jump hosts.

-v Verbose mode.  Causes ssh to print debugging messages about its progress.  This is helpful in debugging
connection, authentication, and configuration problems.  Multiple -v options in crease the verbosity. 
The maximum is 3.

*************************************************************************************
/etc/ssh/sshd_config
LogLevel                    INFO
установка детализации событий для записи в журнал (/var/log/auth.log), по умолчанию INFO
Доступны следующие события: SILENT, QUIET, FATAL, ERROR, INFO, VERBOSE, DEBUG, DEBUG1, DEBUG2, DEBUG3.

Port                        ПОРТ
порт на котором создаётся сервера, по умолчанию 22, на сервере 54322

PasswordAuthentication      yes
включение авторизации по паролю, на сервере(PasswordAuthentication no)
Альтернатива аутентификации по ключу хоста.

*************************************************************************************
ssh chuga@193.138.146.89 -p 56789 -L 9418:127.0.0.1:9418 &
(sudo netstat -tulnp )

ssh box@192.168.0.136 -p 66 -L 2219:127.0.0.1:2219  && ssh box@192.168.233.19 -L 2219:127.0.0.1:2219

Copy public key to remote host.
ssh-copy-id username@remote_host
cat ~/.ssh/id_rsa.pub | ssh username@remote_host "mkdir -p ~/.ssh && cat >> ~/.ssh/authorized_keys"

check permissions on directory .ssh  and files in id_rsa, id_rsa.pub
Example set permissions:
sudo chmod 0700 ~/.ssh/
sudo chmod 0600 ~/.ssh/id*
sudo chmod 0600 ~/.ssh/authorized_keys
sudo chown -R sergey ~/.ssh

В консоли пробросить ip
ssh -D 192.168.34.3:1337 -q -C -N gate@80.240.130.161
-D [bind_address:]port
Specifies a local “dynamic” application-level port forwarding.  This works by allocating a socket to listen to port on the
local side, optionally bound to the specified bind_address.  Whenever a connection is made to this port, the connection is
forwarded over the secure channel, and the application protocol is then used to determine where to connect to from the remote
machine.  Currently the SOCKS4 and SOCKS5 protocols are supported, and ssh will act as a SOCKS server.  Only root can forward
privileged ports.  Dynamic port forwardings can also be specified in the configuration file.

-q  Quiet mode.  Causes most warning and diagnostic messages to be suppressed  

-C Requests compression of all data (including stdin, stdout, stderr, and data for forwarded X11, TCP and UNIX-domain connec‐
tions).  The compression algorithm is the same used by gzip(1).  Compression is desirable on modem lines and other slow con‐
nections, but will only slow down things on fast networks.  The default value can be set on a host-by-host basis in the con‐
figuration files; see the Compression option.

-N  Do not execute a remote command.  This is useful for just forwarding ports.