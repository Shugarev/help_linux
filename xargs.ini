# $ первая_команда | xargs опции вторая_команда аргументы
-0, --null # использовать в качестве разделителя нулевой символ. Обычно он находится в конце строки.
; По умолчанию, в качестве разделителя используется пробел, перевод строки или табуляция;
; хорошо сочетается с опцией -print0 команды find
-d, --delimiter # использовать нестандартный разделитель строк;
-I #[зам_цеп] Режим вставки: команда выполняется для каждой строки стандартного ввода, причём вся строка 
; рассматривается как один аргумент и подставляется в начальные_аргументы вместо каждого вхождения цепочки 
; символов зам_цеп. Допускается не более 5 начальных_аргументов, содержащих одно или несколько вхождений зам_цеп. 
; Пробелы и табуляции в начале вводимых строк отбрасываются. Сформированные аргументы не могут быть длиннее 255
; символов. Если цепочка зам_цеп не задана, она полагается равной { }. Опция -I включает опцию -x.



; Здесь команда -print0 позволяет выводить полный путь к файлу на стандартном выходе, за которым следует 
; нулевой  символ,  а флаг -0 xargs эффективно использует пространство в именах файлов.
find Pictures/ -name "*.png" -type f -print0 | xargs -0 tar -cvzf png.tar

cd $HOME/box/box-project/project
find -iname Box*AllSuite.pm -type f -print0  | xargs -0 -n 1 sed -i 's/^        /#&/g'

; преобразовать вывод множества строк из команды ls в одну
ls Pictures/ | xargs

; есть список файлов, и вы хотите узнать количество строк/слов/символов в каждом файле в списке
ls *file* | xargs wc

; Вот еще один полезный пример использования команды, он показывает, как удалить все файлы в каталоге, 
; кроме одного или нескольких файлов с заданным расширением:
find . -type f -not -name '*png' -print0 | xargs -0 -I {} rm -v {}

; Вы можете включить подробности о выполнении используя флаг -t. Который указывает xargs выводить 
; командную строку на стандартном выводе ошибок перед её выполнением.
find Downloads -name "Pictures" -type d -print0 | xargs -0 -t /bin/rm -rf "{}"

echo  "file1;file2;file3" | xargs -d \; -t touch

; По умолчанию команда разделяет элементы используя пробелы. Потому вы можете использовать флаг -d для установки 
; разделителя. Который может быть единственным символом, escape-символом, например \n. 
; Или восьмеричным или шестнадцатеричным escape-кодом.

; Кроме того, вы также можете запрашивать пользователя о том, следует ли запускать каждую командную строку и читать
; строку с терминала. При этом можете использовать флаг -p. Просто введите “y” для ответа “да” или “n” для ответа “нет”):
echo ./Templates/ ./Documents/ | xargs -p -n 1 cp -v ./Downloads/file.txt


; %x, %X – Вывести аргумент в виде шестнадцатеричного целого числа без знака. %x печатает строчные буквы и %X печатает прописные. 
; Преобразовывает дату в 16 ричное число
date -d '2066-12-31' +"%s" | xargs  printf '%x\n' 
date -d '2066-12-31' +"%s" | xargs -I {} printf '%x\n' {}
